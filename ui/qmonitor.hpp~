#pragma once

#include "qchamber.hpp"
#include "views/expoview.hpp"
#include "controllers/expocontroller.hpp"

#include <qcustomplot.h>

#include <QSplitter>
#include <QTimer>
#include <QPushButton>
#include <QLineEdit>
#include <QString>
#include <QTabWidget>


class QMonitor : public QSplitter {
    Q_OBJECT
public:
    QMonitor(std::shared_ptr<ExpoController> expoContr,
             ExpoView* expoView,
             QWidget *parent = nullptr);
private:
    void setupGUI();
    QCustomPlot* makePlot();
    void createConnections();
    void updateGraph(QCPGraph& graph, int val);
    ExpoView::ChamberFreq convertChamberCount(const ExpoView::ChamberFreq& count, int sec);
    ExpoView::TrekFreq convertTrekCount(const ExpoView::TrekFreq& count, int sec);
private:
    std::shared_ptr<ExpoController> mExpoContr;
    ExpoView* mExpoView;
    QCustomPlot* mPlot;
    QChamberMonitor* mChambers[16];

    intmax_t mTriggerCount;
    intmax_t mPackageCount;
    std::unique_ptr<ExpoView::TrekFreq> mChambersCount;

    QPushButton* mToggle;
    QLineEdit* mFreq;
    QLineEdit* mCurrentRun;
    QLineEdit* mType;
    QTimer* mTimer;
};
